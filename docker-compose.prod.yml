version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: '1m'
      max-file: '3'

services:
    django:
        image: ghcr.io/uccser/codewof:${CODEWOF_IMAGE_TAG}
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==apps
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.enable=true"
                - "traefik.docker.network=uccser-dev-public"
                - "traefik.http.services.codewof-django.loadbalancer.server.port=8000"
                - "traefik.http.routers.codewof-django.service=codewof-django"
                - "traefik.http.routers.codewof-django.rule=Host(`${CODEWOF_DOMAIN`)"
                # - "traefik.http.routers.codewof-django.entryPoints=websecure"
        environment:
            POSTGRES_HOST: postgres
            POSTGRES_PORT: "5432"
            DEPLOYMENT_ENVIRONMENT_FILE: /codewof_deployment_environment
            DJANGO_SECRET_KEY_FILE: /run/secrets/codewof_django_secret_key
            POSTGRES_DB_FILE: /run/secrets/codewof_postgres_db
            POSTGRES_USER_FILE: /run/secrets/codewof_postgres_user
            POSTGRES_PASSWORD_FILE: /run/secrets/codewof_postgres_password
        configs:
            - codewof_deployment_environment
        secrets:
            - codewof_django_secret_key
            - codewof_postgres_db
            - codewof_postgres_user
            - codewof_postgres_password
        networks:
            - uccser-dev-public
            - backend

    postgres:
        <<: *default-opts
        image: postgres:13.3
        # TODO: Write test script that reads secret files
        # to get correct username
        # healthcheck:
        #     test: ["CMD-SHELL", "pg_isready -U postgres"]
        #     start_period: 10s
        #     interval: 10s
        #     timeout: 5s
        #     retries: 3
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==data
            restart_policy:
                condition: on-failure
        environment:
            POSTGRES_DB_FILE: /run/secrets/codewof_postgres_db
            POSTGRES_USER_FILE: /run/secrets/codewof_postgres_user
            POSTGRES_PASSWORD_FILE: /run/secrets/codewof_postgres_password
        secrets:
            - codewof_postgres_db
            - codewof_postgres_user
            - codewof_postgres_password
        networks:
            - backend
        volumes:
            - postgres-data:/var/lib/postgresql/data:Z
            - postgres-data-backups:/backups:z

    elasticsearch:
        <<: *default-opts
        image: elasticsearch:5
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==data
            restart_policy:
                condition: on-failure
        networks:
            - backend
        volumes:
            - search-index:/usr/share/elasticsearch/data:Z

configs:
    codewof_deployment_environment:
        external: true

secrets:
    codewof_django_secret_key:
        external: true
    codewof_postgres_db:
        external: true
    codewof_postgres_user:
        external: true
    codewof_postgres_password:
        external: true

networks:
    uccser-dev-public:
        external: true
    backend:
        driver: overlay
        attachable: true

volumes:
    postgres-data: {}
    postgres-data-backups: {}
    search-index: {}
